generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id            String     @id @default(uuid())
  name          String     @unique
  description   String
  price         Float
  images        Image[]
  stockQuantity Int
  rating        Float

  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  orders ProductOnOrder[]
}

model Image {
  id            String   @id @default(uuid())
  name          String   @unique
  product       Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId     String
}

model Order {
  id              String    @id @default(uuid())
  firstName       String
  lastName        String
  shippingAddress String
  totalAmount     Float
  orderStatus     OrderStatus
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          String

  products        ProductOnOrder[]

  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model ProductOnOrder {
  id              String @id @default(uuid())
  orderId         String
  order     Order @relation(fields: [orderId], references: [id], onDelete: Cascade)
  quantity        Int
  additionalInfo  String
  product         Product @relation(fields: [productId], references: [id])
  productId       String
}

enum OrderStatus {
  PROCESSING
  SHIPPED
  DELIVERED
}

enum Role {
  USER
  ADMIN
}

model User {
  id              String    @id @default(uuid())
  email           String    @unique
  password        Password?
  role            Role      @default(USER)
  orders          Order[]
}

model Password {
  id              String @id @default(uuid())
  hashedPassword  String
  user            User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          String @unique
}